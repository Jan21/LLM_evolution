graph_generation:
  sphere_mesh:
    num_horizontal: 20
    num_vertical: 20
  output:
    file_path: "temp/sphere_mesh_graph.pkl"
    visualize: true
    print_stats: true

data_generation:
  train:
    num_paths: 10000
    min_length: 3
    max_length: 15
  test:
    num_paths: 2000
  graph_path: ${graph_generation.output.file_path}
  output_dir: "."


model:
  d_model: 64
  num_heads: 4
  num_layers: 6
  d_ff: 94
  max_seq_length: 128
  dropout: 0.1
  vocab_size: null  # Will be computed as num_horizontal * num_vertical

training:
  learning_rate: 1e-4
  batch_size: 125
  max_epochs: 120
  weight_decay: 1e-5
  warmup_steps: 300
  gradient_clip_val: 1.0

data:
  train_file: "train.json"
  test_file: "test.json"
  max_path_length: 64
  num_workers: 4

logging:
  project_name: "path_prediction"
  experiment_name: "transformer_baseline"
  log_every_n_steps: 50

paths:
  data_dir: "./temp"
  model_dir: "./model"
  checkpoint_dir: "./checkpoints"

# Hydra configuration
defaults:
  - _self_
  - override hydra/sweeper: optuna

# Optuna sweeper configuration
hydra:
  sweeper:
    sampler:
      _target_: optuna.samplers.TPESampler
      seed: 123
    direction: minimize
    study_name: path_prediction_optimization
    storage: null
    n_trials: 50
    n_jobs: 1
    params:
      model.d_model: choice(64, 128, 256)
      model.num_heads: choice(4, 8, 16)
      model.num_layers: choice(3, 6, 9)
      model.d_ff: choice(128, 256, 512)
      training.learning_rate: range(1e-4, 1e-3)
